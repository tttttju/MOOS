ServerHost = localhost
ServerPort = 9030
Community  = pc_viewer

MOOSTimeWarp = 1

// Forest Lake
//LatOrigin  = 43.825300 
//LongOrigin = -70.330400 

// MIT Sailing Pavilion (use this one)
LatOrigin  = 42.358456 
LongOrigin = -71.087589


//------------------------------------------
// Antler configuration  block
ProcessConfig = ANTLER
{
  MSBetweenLaunches = 200

  Run = MOOSDB          @ NewConsole = false
  Run = pShare          @ NewConsole = true ~ pShare_pc_viewer
  //Run = pLogger         @ NewConsole = false

  Run = pMarineViewer   @ NewConsole = false
  //Run = uProcessWatch   @ NewConsole = false
  Run = pNodeReporter   @ NewConsole = false
}                    

//---------------------------------------------------------
// pShare Config Block  (Created from Plugin)

ProcessConfig = pShare_pc_viewer
{
  AppTick    = 4
  CommsTick  = 4

  input = route=localhost:9031
  
  output = src_name=DEPLOY, route=localhost:9001
  output = src_name=RETURN, route=localhost:9001
  output = src_name=MOOS_MANUAL_OVERRIDE, route=localhost:9001
  output = src_name=REGION_INFO, route=localhost:9001
  //output = src_name=PMV_CONNECT, route=localhost:9001
  //output = src_name=HELM_MAP_CLEAR, route=localhost:9001
  output = src_name=APPCAST_REQ, route=localhost:9001
  //output = src_name=APPCAST_REQ_ALL, route=localhost:9001

  output = src_name=MOUSE_EVENT, route=localhost:9051
  output = src_name=APPCAST_REQ, route=localhost:9001


  // =======================================================
  // Usage Info below
  // =======================================================

  // Simple forward of X to A on channel 8
  // output = src_name = X,dest_name=A, route=multicast_8
 
  // Simple forward of Y to B on a udp address

  //output = src_name=Y, dest_name=B, route=localhost:9300
 
  // Simple forward of Z to Z on a named address (no renaming)
  // output = src_name = Z, route = oceanai.mit.edu:9020
 
  // Setting up an input
  // input = route = multicast_9
  
  //input = route = localhost:$(SHARE_LISTEN) & multicast_9

 
  // Setting up lots of inputs at once
  // input = route = "localhost:9069 & multicast_19 & multicast_65"
}

//------------------------------------------
// uProcessWatch config block

ProcessConfig = uProcessWatch
{
  AppTick   = 4
  CommsTick = 4

  summary_wait = 5

  nowatch   = uXMS*
  nowatch   = uMAC*
  nowatch   = uPokeDB*
  nowatch   = uTermCommand*
  watch_all = true
}


//------------------------------------------
// pLogger config block

ProcessConfig = pLogger
{
  AppTick   = 8
  CommsTick = 8

  AsyncLog = true

  // For variables that are published in a bundle on their first post,
  // explicitly declare their logging request

  Log = OBAVOID_COMPLETED @ 0 NOSYNC
  Log = IVPHELM_LIFE_EVENT @ 0 NOSYNC
  Log = BHV_WARNING @ 0 NOSYNC

  LogAuxSrc = true
  WildCardLogging = true
  WildCardOmitPattern = *_STATUS
  WildCardOmitPattern = DB_VARSUMMARY
  WildCardOmitPattern = DB_RWSUMMARY
  WildCardExclusionLog = true
}

//------------------------------------------
// pMarineViewer config block

ProcessConfig = pMarineViewer
{
  AppTick    = 4
  CommsTick  = 4

  //tiff_file            = forrest19.tif
  //tiff_file            = AerialMIT.tif
  tiff_file              = forrest19_2.tif
  auv_tiff_file          = auv_1.tif

  set_pan_x            = -90
  set_pan_y            = 80
  zoom                 = 1.0

  vehicle_shape_scale  = 1
  hash_delta           = 50
  hash_shade           = 0.4
  hash_viewable        = false
  
  trails_viewable      = false
  trails_point_size    = 1

  // Appcast configuration
  appcast_height       = 75
  appcast_width        = 30
  appcast_viewable     = true
  appcast_color_scheme = indigo
  nodes_font_size      = medium
  procs_font_size      = medium
  appcast_font_size    = small
  vehicles_name_mode    = off
  seglist_viewable_labels = false
  point_viewable_labels = false
  
  //left_context[polyvert] = POLY_VERT=x=$(XPOS),y=$(YPOS)
  //left_context[pt] = VIEW_POINT = x=$(XPOS),y=$(YPOS),event_type=$(EVENT_TYPE),label=pt$(IX),vertex_color=white
  left_context[pt] = MOUSE_EVENT = x=$(XPOS),y=$(YPOS),event_type=$(EVENT_TYPE),label=pt$(IX),button=left
  right_context[pt] = MOUSE_EVENT = x=$(XPOS),y=$(YPOS),event_type=$(EVENT_TYPE),label=pt$(IX),button=right
	
  scope  = DST_AVD_OBSTACLESC
  scope  = RNG_AVD_OBSTACLESC
  scope  = RNG_AVD_OBSTACLESA
  scope  = POSE_KEEP
  scope  = VIEW_POLYGON
  scope  = VIEW_POINT
	scope  = RETURN
  scope  = WPT_STAT
  scope  = VIEW_SEGLIST

  button_one = DEPLOY # DEPLOY=true
  button_one = MOOS_MANUAL_OVERRIDE=false # RETURN=false
  button_two = RETURN # RETURN=true
}

//------------------------------------------
// pNodeReporter config block

ProcessConfig = pNodeReporter
{
  AppTick    = 2
  CommsTick	 = 2

  platform_type    = auv // kayak
  platform_length  = 30.0 // 8
  platform_color   = red
}
